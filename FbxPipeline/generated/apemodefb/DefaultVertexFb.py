# automatically generated by the FlatBuffers compiler, do not modify

# namespace: apemodefb

import flatbuffers

class DefaultVertexFb(object):
    __slots__ = ['_tab']

    # DefaultVertexFb
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DefaultVertexFb
    def Position(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 0)
        return obj

    # DefaultVertexFb
    def Uv(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 12)
        return obj

    # DefaultVertexFb
    def Qtangent(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 20)
        return obj

    # DefaultVertexFb
    def IndexColorRGB(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(36))
    # DefaultVertexFb
    def ColorAlpha(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(40))

def CreateDefaultVertexFb(builder, position_x, position_y, position_z, uv_x, uv_y, qtangent_nx, qtangent_ny, qtangent_nz, qtangent_s, indexColorRGB, colorAlpha):
    builder.Prep(4, 44)
    builder.PrependFloat32(colorAlpha)
    builder.PrependUint32(indexColorRGB)
    builder.Prep(4, 16)
    builder.PrependFloat32(qtangent_s)
    builder.PrependFloat32(qtangent_nz)
    builder.PrependFloat32(qtangent_ny)
    builder.PrependFloat32(qtangent_nx)
    builder.Prep(4, 8)
    builder.PrependFloat32(uv_y)
    builder.PrependFloat32(uv_x)
    builder.Prep(4, 12)
    builder.PrependFloat32(position_z)
    builder.PrependFloat32(position_y)
    builder.PrependFloat32(position_x)
    return builder.Offset()
