# automatically generated by the FlatBuffers compiler, do not modify

# namespace: apemodefb

import flatbuffers

class StaticSkinned8VertexFb(object):
    __slots__ = ['_tab']

    # StaticSkinned8VertexFb
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # StaticSkinned8VertexFb
    def Position(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 0)
        return obj

    # StaticSkinned8VertexFb
    def Normal(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 12)
        return obj

    # StaticSkinned8VertexFb
    def Tangent(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 24)
        return obj

    # StaticSkinned8VertexFb
    def Uv(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 40)
        return obj

    # StaticSkinned8VertexFb
    def Weights0(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 48)
        return obj

    # StaticSkinned8VertexFb
    def Weights1(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 64)
        return obj

    # StaticSkinned8VertexFb
    def Indices0(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 80)
        return obj

    # StaticSkinned8VertexFb
    def Indices1(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 96)
        return obj


def CreateStaticSkinned8VertexFb(builder, position_x, position_y, position_z, normal_x, normal_y, normal_z, tangent_x, tangent_y, tangent_z, tangent_w, uv_x, uv_y, weights_0_x, weights_0_y, weights_0_z, weights_0_w, weights_1_x, weights_1_y, weights_1_z, weights_1_w, indices_0_x, indices_0_y, indices_0_z, indices_0_w, indices_1_x, indices_1_y, indices_1_z, indices_1_w):
    builder.Prep(4, 112)
    builder.Prep(4, 16)
    builder.PrependFloat32(indices_1_w)
    builder.PrependFloat32(indices_1_z)
    builder.PrependFloat32(indices_1_y)
    builder.PrependFloat32(indices_1_x)
    builder.Prep(4, 16)
    builder.PrependFloat32(indices_0_w)
    builder.PrependFloat32(indices_0_z)
    builder.PrependFloat32(indices_0_y)
    builder.PrependFloat32(indices_0_x)
    builder.Prep(4, 16)
    builder.PrependFloat32(weights_1_w)
    builder.PrependFloat32(weights_1_z)
    builder.PrependFloat32(weights_1_y)
    builder.PrependFloat32(weights_1_x)
    builder.Prep(4, 16)
    builder.PrependFloat32(weights_0_w)
    builder.PrependFloat32(weights_0_z)
    builder.PrependFloat32(weights_0_y)
    builder.PrependFloat32(weights_0_x)
    builder.Prep(4, 8)
    builder.PrependFloat32(uv_y)
    builder.PrependFloat32(uv_x)
    builder.Prep(4, 16)
    builder.PrependFloat32(tangent_w)
    builder.PrependFloat32(tangent_z)
    builder.PrependFloat32(tangent_y)
    builder.PrependFloat32(tangent_x)
    builder.Prep(4, 12)
    builder.PrependFloat32(normal_z)
    builder.PrependFloat32(normal_y)
    builder.PrependFloat32(normal_x)
    builder.Prep(4, 12)
    builder.PrependFloat32(position_z)
    builder.PrependFloat32(position_y)
    builder.PrependFloat32(position_x)
    return builder.Offset()
