// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var apemodefb = apemodefb || {};

/**
 * @enum
 */
apemodefb.EVersionFb = {
  Value: 6
};

/**
 * @enum
 */
apemodefb.ECullingTypeFb = {
  CullingOff: 0,
  CullingOnCCW: 1,
  CullingOnCW: 2
};

/**
 * @enum
 */
apemodefb.EWrapModeFb = {
  Repeat: 0,
  Clamp: 1
};

/**
 * @enum
 */
apemodefb.EBlendModeFb = {
  Translucent: 0,
  Additive: 1,
  Modulate: 2,
  Modulate2: 3,
  Over: 4
};

/**
 * @enum
 */
apemodefb.EAlphaSourceFb = {
  None: 0,
  RGBIntensity: 1,
  Black: 2
};

/**
 * @enum
 */
apemodefb.ETextureUseFb = {
  Standard: 0,
  ShadowMap: 1,
  LightMap: 2,
  SphericalReflectionMap: 3,
  SphereReflectionMap: 4,
  BumpNormalMap: 5
};

/**
 * @enum
 */
apemodefb.EMappingTypeFb = {
  Null: 0,
  Planar: 1,
  Spherical: 2,
  Cylindrical: 3,
  Box: 4,
  Face: 5,
  UV: 6,
  Environment: 7
};

/**
 * @enum
 */
apemodefb.EPlanarMappingNormalFb = {
  PlanarNormalX: 0,
  PlanarNormalY: 1,
  PlanarNormalZ: 2
};

/**
 * @enum
 */
apemodefb.EVertexFormatFb = {
  Static: 0,
  StaticSkinned: 1,
  Packed: 2,
  PackedSkinned: 3
};

/**
 * @enum
 */
apemodefb.EIndexTypeFb = {
  UInt16: 0,
  UInt16Compressed: 1,
  UInt32: 2,
  UInt32Compressed: 3,
  Count: 4
};

/**
 * @enum
 */
apemodefb.EMaterialPropTypeFb = {
  Bool: 0,
  Float: 1,
  Float2: 2,
  Float3: 3,
  Texture: 4
};

/**
 * @enum
 */
apemodefb.EAnimCurvePropertyFb = {
  LclTranslation: 0,
  RotationOffset: 1,
  RotationPivot: 2,
  PreRotation: 3,
  PostRotation: 4,
  LclRotation: 5,
  ScalingOffset: 6,
  ScalingPivot: 7,
  LclScaling: 8,
  GeometricTranslation: 9,
  GeometricRotation: 10,
  GeometricScaling: 11
};

/**
 * @enum
 */
apemodefb.EAnimCurveChannelFb = {
  X: 0,
  Y: 1,
  Z: 2
};

/**
 * @enum
 */
apemodefb.EInterpolationModeFb = {
  Const: 0,
  Linear: 1,
  Cubic: 2
};

/**
 * @enum
 */
apemodefb.ELightTypeFb = {
  Point: 0,
  Directional: 1,
  Spot: 2,
  Area: 3
};

/**
 * @enum
 */
apemodefb.EAreaLightTypeFb = {
  Rect: 0,
  Sphere: 1
};

/**
 * @enum
 */
apemodefb.EValueTypeFb = {
  Bool: 0,
  Int: 1,
  Float: 2,
  Float2: 3,
  Float3: 4,
  Float4: 5,
  String: 6
};

/**
 * @constructor
 */
apemodefb.Vec2Fb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.Vec2Fb}
 */
apemodefb.Vec2Fb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
apemodefb.Vec2Fb.prototype.x = function() {
  return this.bb.readFloat32(this.bb_pos);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.Vec2Fb.prototype.mutate_x = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 0);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.Vec2Fb.prototype.y = function() {
  return this.bb.readFloat32(this.bb_pos + 4);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.Vec2Fb.prototype.mutate_y = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 * @param {number} y
 * @returns {flatbuffers.Offset}
 */
apemodefb.Vec2Fb.createVec2Fb = function(builder, x, y) {
  builder.prep(4, 8);
  builder.writeFloat32(y);
  builder.writeFloat32(x);
  return builder.offset();
};

/**
 * @constructor
 */
apemodefb.Vec3Fb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.Vec3Fb}
 */
apemodefb.Vec3Fb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
apemodefb.Vec3Fb.prototype.x = function() {
  return this.bb.readFloat32(this.bb_pos);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.Vec3Fb.prototype.mutate_x = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 0);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.Vec3Fb.prototype.y = function() {
  return this.bb.readFloat32(this.bb_pos + 4);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.Vec3Fb.prototype.mutate_y = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.Vec3Fb.prototype.z = function() {
  return this.bb.readFloat32(this.bb_pos + 8);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.Vec3Fb.prototype.mutate_z = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @returns {flatbuffers.Offset}
 */
apemodefb.Vec3Fb.createVec3Fb = function(builder, x, y, z) {
  builder.prep(4, 12);
  builder.writeFloat32(z);
  builder.writeFloat32(y);
  builder.writeFloat32(x);
  return builder.offset();
};

/**
 * @constructor
 */
apemodefb.Vec4Fb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.Vec4Fb}
 */
apemodefb.Vec4Fb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
apemodefb.Vec4Fb.prototype.x = function() {
  return this.bb.readFloat32(this.bb_pos);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.Vec4Fb.prototype.mutate_x = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 0);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.Vec4Fb.prototype.y = function() {
  return this.bb.readFloat32(this.bb_pos + 4);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.Vec4Fb.prototype.mutate_y = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.Vec4Fb.prototype.z = function() {
  return this.bb.readFloat32(this.bb_pos + 8);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.Vec4Fb.prototype.mutate_z = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.Vec4Fb.prototype.w = function() {
  return this.bb.readFloat32(this.bb_pos + 12);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.Vec4Fb.prototype.mutate_w = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} w
 * @returns {flatbuffers.Offset}
 */
apemodefb.Vec4Fb.createVec4Fb = function(builder, x, y, z, w) {
  builder.prep(4, 16);
  builder.writeFloat32(w);
  builder.writeFloat32(z);
  builder.writeFloat32(y);
  builder.writeFloat32(x);
  return builder.offset();
};

/**
 * @constructor
 */
apemodefb.Mat4Fb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.Mat4Fb}
 */
apemodefb.Mat4Fb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {apemodefb.Vec4Fb=} obj
 * @returns {apemodefb.Vec4Fb|null}
 */
apemodefb.Mat4Fb.prototype.x = function(obj) {
  return (obj || new apemodefb.Vec4Fb).__init(this.bb_pos, this.bb);
};

/**
 * @param {apemodefb.Vec4Fb=} obj
 * @returns {apemodefb.Vec4Fb|null}
 */
apemodefb.Mat4Fb.prototype.y = function(obj) {
  return (obj || new apemodefb.Vec4Fb).__init(this.bb_pos + 16, this.bb);
};

/**
 * @param {apemodefb.Vec4Fb=} obj
 * @returns {apemodefb.Vec4Fb|null}
 */
apemodefb.Mat4Fb.prototype.z = function(obj) {
  return (obj || new apemodefb.Vec4Fb).__init(this.bb_pos + 32, this.bb);
};

/**
 * @param {apemodefb.Vec4Fb=} obj
 * @returns {apemodefb.Vec4Fb|null}
 */
apemodefb.Mat4Fb.prototype.w = function(obj) {
  return (obj || new apemodefb.Vec4Fb).__init(this.bb_pos + 48, this.bb);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x_x
 * @param {number} x_y
 * @param {number} x_z
 * @param {number} x_w
 * @param {number} y_x
 * @param {number} y_y
 * @param {number} y_z
 * @param {number} y_w
 * @param {number} z_x
 * @param {number} z_y
 * @param {number} z_z
 * @param {number} z_w
 * @param {number} w_x
 * @param {number} w_y
 * @param {number} w_z
 * @param {number} w_w
 * @returns {flatbuffers.Offset}
 */
apemodefb.Mat4Fb.createMat4Fb = function(builder, x_x, x_y, x_z, x_w, y_x, y_y, y_z, y_w, z_x, z_y, z_z, z_w, w_x, w_y, w_z, w_w) {
  builder.prep(4, 64);
  builder.prep(4, 16);
  builder.writeFloat32(w_w);
  builder.writeFloat32(w_z);
  builder.writeFloat32(w_y);
  builder.writeFloat32(w_x);
  builder.prep(4, 16);
  builder.writeFloat32(z_w);
  builder.writeFloat32(z_z);
  builder.writeFloat32(z_y);
  builder.writeFloat32(z_x);
  builder.prep(4, 16);
  builder.writeFloat32(y_w);
  builder.writeFloat32(y_z);
  builder.writeFloat32(y_y);
  builder.writeFloat32(y_x);
  builder.prep(4, 16);
  builder.writeFloat32(x_w);
  builder.writeFloat32(x_z);
  builder.writeFloat32(x_y);
  builder.writeFloat32(x_x);
  return builder.offset();
};

/**
 * @constructor
 */
apemodefb.StaticVertexFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.StaticVertexFb}
 */
apemodefb.StaticVertexFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {apemodefb.Vec3Fb=} obj
 * @returns {apemodefb.Vec3Fb|null}
 */
apemodefb.StaticVertexFb.prototype.position = function(obj) {
  return (obj || new apemodefb.Vec3Fb).__init(this.bb_pos, this.bb);
};

/**
 * @param {apemodefb.Vec3Fb=} obj
 * @returns {apemodefb.Vec3Fb|null}
 */
apemodefb.StaticVertexFb.prototype.normal = function(obj) {
  return (obj || new apemodefb.Vec3Fb).__init(this.bb_pos + 12, this.bb);
};

/**
 * @param {apemodefb.Vec4Fb=} obj
 * @returns {apemodefb.Vec4Fb|null}
 */
apemodefb.StaticVertexFb.prototype.tangent = function(obj) {
  return (obj || new apemodefb.Vec4Fb).__init(this.bb_pos + 24, this.bb);
};

/**
 * @param {apemodefb.Vec2Fb=} obj
 * @returns {apemodefb.Vec2Fb|null}
 */
apemodefb.StaticVertexFb.prototype.uv = function(obj) {
  return (obj || new apemodefb.Vec2Fb).__init(this.bb_pos + 40, this.bb);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} position_x
 * @param {number} position_y
 * @param {number} position_z
 * @param {number} normal_x
 * @param {number} normal_y
 * @param {number} normal_z
 * @param {number} tangent_x
 * @param {number} tangent_y
 * @param {number} tangent_z
 * @param {number} tangent_w
 * @param {number} uv_x
 * @param {number} uv_y
 * @returns {flatbuffers.Offset}
 */
apemodefb.StaticVertexFb.createStaticVertexFb = function(builder, position_x, position_y, position_z, normal_x, normal_y, normal_z, tangent_x, tangent_y, tangent_z, tangent_w, uv_x, uv_y) {
  builder.prep(4, 48);
  builder.prep(4, 8);
  builder.writeFloat32(uv_y);
  builder.writeFloat32(uv_x);
  builder.prep(4, 16);
  builder.writeFloat32(tangent_w);
  builder.writeFloat32(tangent_z);
  builder.writeFloat32(tangent_y);
  builder.writeFloat32(tangent_x);
  builder.prep(4, 12);
  builder.writeFloat32(normal_z);
  builder.writeFloat32(normal_y);
  builder.writeFloat32(normal_x);
  builder.prep(4, 12);
  builder.writeFloat32(position_z);
  builder.writeFloat32(position_y);
  builder.writeFloat32(position_x);
  return builder.offset();
};

/**
 * @constructor
 */
apemodefb.PackedVertexFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.PackedVertexFb}
 */
apemodefb.PackedVertexFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
apemodefb.PackedVertexFb.prototype.position = function() {
  return this.bb.readUint32(this.bb_pos);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.PackedVertexFb.prototype.mutate_position = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 0);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.PackedVertexFb.prototype.normal = function() {
  return this.bb.readUint32(this.bb_pos + 4);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.PackedVertexFb.prototype.mutate_normal = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.PackedVertexFb.prototype.tangent = function() {
  return this.bb.readUint32(this.bb_pos + 8);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.PackedVertexFb.prototype.mutate_tangent = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.PackedVertexFb.prototype.uv = function() {
  return this.bb.readUint32(this.bb_pos + 12);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.PackedVertexFb.prototype.mutate_uv = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} position
 * @param {number} normal
 * @param {number} tangent
 * @param {number} uv
 * @returns {flatbuffers.Offset}
 */
apemodefb.PackedVertexFb.createPackedVertexFb = function(builder, position, normal, tangent, uv) {
  builder.prep(4, 16);
  builder.writeInt32(uv);
  builder.writeInt32(tangent);
  builder.writeInt32(normal);
  builder.writeInt32(position);
  return builder.offset();
};

/**
 * @constructor
 */
apemodefb.StaticSkinnedVertexFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.StaticSkinnedVertexFb}
 */
apemodefb.StaticSkinnedVertexFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {apemodefb.Vec3Fb=} obj
 * @returns {apemodefb.Vec3Fb|null}
 */
apemodefb.StaticSkinnedVertexFb.prototype.position = function(obj) {
  return (obj || new apemodefb.Vec3Fb).__init(this.bb_pos, this.bb);
};

/**
 * @param {apemodefb.Vec3Fb=} obj
 * @returns {apemodefb.Vec3Fb|null}
 */
apemodefb.StaticSkinnedVertexFb.prototype.normal = function(obj) {
  return (obj || new apemodefb.Vec3Fb).__init(this.bb_pos + 12, this.bb);
};

/**
 * @param {apemodefb.Vec4Fb=} obj
 * @returns {apemodefb.Vec4Fb|null}
 */
apemodefb.StaticSkinnedVertexFb.prototype.tangent = function(obj) {
  return (obj || new apemodefb.Vec4Fb).__init(this.bb_pos + 24, this.bb);
};

/**
 * @param {apemodefb.Vec2Fb=} obj
 * @returns {apemodefb.Vec2Fb|null}
 */
apemodefb.StaticSkinnedVertexFb.prototype.uv = function(obj) {
  return (obj || new apemodefb.Vec2Fb).__init(this.bb_pos + 40, this.bb);
};

/**
 * @param {apemodefb.Vec4Fb=} obj
 * @returns {apemodefb.Vec4Fb|null}
 */
apemodefb.StaticSkinnedVertexFb.prototype.weights = function(obj) {
  return (obj || new apemodefb.Vec4Fb).__init(this.bb_pos + 48, this.bb);
};

/**
 * @param {apemodefb.Vec4Fb=} obj
 * @returns {apemodefb.Vec4Fb|null}
 */
apemodefb.StaticSkinnedVertexFb.prototype.indices = function(obj) {
  return (obj || new apemodefb.Vec4Fb).__init(this.bb_pos + 64, this.bb);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} position_x
 * @param {number} position_y
 * @param {number} position_z
 * @param {number} normal_x
 * @param {number} normal_y
 * @param {number} normal_z
 * @param {number} tangent_x
 * @param {number} tangent_y
 * @param {number} tangent_z
 * @param {number} tangent_w
 * @param {number} uv_x
 * @param {number} uv_y
 * @param {number} weights_x
 * @param {number} weights_y
 * @param {number} weights_z
 * @param {number} weights_w
 * @param {number} indices_x
 * @param {number} indices_y
 * @param {number} indices_z
 * @param {number} indices_w
 * @returns {flatbuffers.Offset}
 */
apemodefb.StaticSkinnedVertexFb.createStaticSkinnedVertexFb = function(builder, position_x, position_y, position_z, normal_x, normal_y, normal_z, tangent_x, tangent_y, tangent_z, tangent_w, uv_x, uv_y, weights_x, weights_y, weights_z, weights_w, indices_x, indices_y, indices_z, indices_w) {
  builder.prep(4, 80);
  builder.prep(4, 16);
  builder.writeFloat32(indices_w);
  builder.writeFloat32(indices_z);
  builder.writeFloat32(indices_y);
  builder.writeFloat32(indices_x);
  builder.prep(4, 16);
  builder.writeFloat32(weights_w);
  builder.writeFloat32(weights_z);
  builder.writeFloat32(weights_y);
  builder.writeFloat32(weights_x);
  builder.prep(4, 8);
  builder.writeFloat32(uv_y);
  builder.writeFloat32(uv_x);
  builder.prep(4, 16);
  builder.writeFloat32(tangent_w);
  builder.writeFloat32(tangent_z);
  builder.writeFloat32(tangent_y);
  builder.writeFloat32(tangent_x);
  builder.prep(4, 12);
  builder.writeFloat32(normal_z);
  builder.writeFloat32(normal_y);
  builder.writeFloat32(normal_x);
  builder.prep(4, 12);
  builder.writeFloat32(position_z);
  builder.writeFloat32(position_y);
  builder.writeFloat32(position_x);
  return builder.offset();
};

/**
 * @constructor
 */
apemodefb.PackedSkinnedVertexFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.PackedSkinnedVertexFb}
 */
apemodefb.PackedSkinnedVertexFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
apemodefb.PackedSkinnedVertexFb.prototype.position = function() {
  return this.bb.readUint32(this.bb_pos);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.PackedSkinnedVertexFb.prototype.mutate_position = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 0);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.PackedSkinnedVertexFb.prototype.normal = function() {
  return this.bb.readUint32(this.bb_pos + 4);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.PackedSkinnedVertexFb.prototype.mutate_normal = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.PackedSkinnedVertexFb.prototype.tangent = function() {
  return this.bb.readUint32(this.bb_pos + 8);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.PackedSkinnedVertexFb.prototype.mutate_tangent = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.PackedSkinnedVertexFb.prototype.uv = function() {
  return this.bb.readUint32(this.bb_pos + 12);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.PackedSkinnedVertexFb.prototype.mutate_uv = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.PackedSkinnedVertexFb.prototype.weights = function() {
  return this.bb.readUint32(this.bb_pos + 16);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.PackedSkinnedVertexFb.prototype.mutate_weights = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 16);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.PackedSkinnedVertexFb.prototype.indices = function() {
  return this.bb.readUint32(this.bb_pos + 20);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.PackedSkinnedVertexFb.prototype.mutate_indices = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 20);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} position
 * @param {number} normal
 * @param {number} tangent
 * @param {number} uv
 * @param {number} weights
 * @param {number} indices
 * @returns {flatbuffers.Offset}
 */
apemodefb.PackedSkinnedVertexFb.createPackedSkinnedVertexFb = function(builder, position, normal, tangent, uv, weights, indices) {
  builder.prep(4, 24);
  builder.writeInt32(indices);
  builder.writeInt32(weights);
  builder.writeInt32(uv);
  builder.writeInt32(tangent);
  builder.writeInt32(normal);
  builder.writeInt32(position);
  return builder.offset();
};

/**
 * @constructor
 */
apemodefb.AnimStackFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.AnimStackFb}
 */
apemodefb.AnimStackFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
apemodefb.AnimStackFb.prototype.id = function() {
  return this.bb.readUint32(this.bb_pos);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.AnimStackFb.prototype.mutate_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 0);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.AnimStackFb.prototype.nameId = function() {
  return this.bb.readUint32(this.bb_pos + 4);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.AnimStackFb.prototype.mutate_name_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 * @param {number} name_id
 * @returns {flatbuffers.Offset}
 */
apemodefb.AnimStackFb.createAnimStackFb = function(builder, id, name_id) {
  builder.prep(4, 8);
  builder.writeInt32(name_id);
  builder.writeInt32(id);
  return builder.offset();
};

/**
 * @constructor
 */
apemodefb.AnimLayerFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.AnimLayerFb}
 */
apemodefb.AnimLayerFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
apemodefb.AnimLayerFb.prototype.id = function() {
  return this.bb.readUint32(this.bb_pos);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.AnimLayerFb.prototype.mutate_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 0);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.AnimLayerFb.prototype.animStackId = function() {
  return this.bb.readUint32(this.bb_pos + 4);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.AnimLayerFb.prototype.mutate_anim_stack_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.AnimLayerFb.prototype.nameId = function() {
  return this.bb.readUint32(this.bb_pos + 8);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.AnimLayerFb.prototype.mutate_name_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 * @param {number} anim_stack_id
 * @param {number} name_id
 * @returns {flatbuffers.Offset}
 */
apemodefb.AnimLayerFb.createAnimLayerFb = function(builder, id, anim_stack_id, name_id) {
  builder.prep(4, 12);
  builder.writeInt32(name_id);
  builder.writeInt32(anim_stack_id);
  builder.writeInt32(id);
  return builder.offset();
};

/**
 * @constructor
 */
apemodefb.AnimCurveKeyFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.AnimCurveKeyFb}
 */
apemodefb.AnimCurveKeyFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
apemodefb.AnimCurveKeyFb.prototype.time = function() {
  return this.bb.readFloat32(this.bb_pos);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.AnimCurveKeyFb.prototype.mutate_time = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 0);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.AnimCurveKeyFb.prototype.value = function() {
  return this.bb.readFloat32(this.bb_pos + 4);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.AnimCurveKeyFb.prototype.mutate_value = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.AnimCurveKeyFb.prototype.arriveTangent = function() {
  return this.bb.readFloat32(this.bb_pos + 8);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.AnimCurveKeyFb.prototype.mutate_arrive_tangent = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.AnimCurveKeyFb.prototype.leaveTangent = function() {
  return this.bb.readFloat32(this.bb_pos + 12);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.AnimCurveKeyFb.prototype.mutate_leave_tangent = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {apemodefb.EInterpolationModeFb}
 */
apemodefb.AnimCurveKeyFb.prototype.interpolationMode = function() {
  return /** @type {apemodefb.EInterpolationModeFb} */ (this.bb.readUint8(this.bb_pos + 16));
};

/**
 * @param {apemodefb.EInterpolationModeFb} value
 * @returns {boolean}
 */
apemodefb.AnimCurveKeyFb.prototype.mutate_interpolationMode = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 16);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} time
 * @param {number} value
 * @param {number} arrive_tangent
 * @param {number} leave_tangent
 * @param {apemodefb.EInterpolationModeFb} interpolationMode
 * @returns {flatbuffers.Offset}
 */
apemodefb.AnimCurveKeyFb.createAnimCurveKeyFb = function(builder, time, value, arrive_tangent, leave_tangent, interpolationMode) {
  builder.prep(4, 20);
  builder.pad(3);
  builder.writeInt8(interpolationMode);
  builder.writeFloat32(leave_tangent);
  builder.writeFloat32(arrive_tangent);
  builder.writeFloat32(value);
  builder.writeFloat32(time);
  return builder.offset();
};

/**
 * @constructor
 */
apemodefb.AnimCurveFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.AnimCurveFb}
 */
apemodefb.AnimCurveFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {apemodefb.AnimCurveFb=} obj
 * @returns {apemodefb.AnimCurveFb}
 */
apemodefb.AnimCurveFb.getRootAsAnimCurveFb = function(bb, obj) {
  return (obj || new apemodefb.AnimCurveFb).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
apemodefb.AnimCurveFb.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.AnimCurveFb.prototype.mutate_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.AnimCurveFb.prototype.nameId = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.AnimCurveFb.prototype.mutate_name_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.AnimCurveFb.prototype.animStackId = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.AnimCurveFb.prototype.mutate_anim_stack_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.AnimCurveFb.prototype.animLayerId = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.AnimCurveFb.prototype.mutate_anim_layer_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {apemodefb.EAnimCurvePropertyFb}
 */
apemodefb.AnimCurveFb.prototype.property = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? /** @type {apemodefb.EAnimCurvePropertyFb} */ (this.bb.readUint8(this.bb_pos + offset)) : apemodefb.EAnimCurvePropertyFb.LclTranslation;
};

/**
 * @param {apemodefb.EAnimCurvePropertyFb} value
 * @returns {boolean}
 */
apemodefb.AnimCurveFb.prototype.mutate_property = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {apemodefb.EAnimCurveChannelFb}
 */
apemodefb.AnimCurveFb.prototype.channel = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? /** @type {apemodefb.EAnimCurveChannelFb} */ (this.bb.readUint8(this.bb_pos + offset)) : apemodefb.EAnimCurveChannelFb.X;
};

/**
 * @param {apemodefb.EAnimCurveChannelFb} value
 * @returns {boolean}
 */
apemodefb.AnimCurveFb.prototype.mutate_channel = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 14);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {number} index
 * @param {apemodefb.AnimCurveKeyFb=} obj
 * @returns {apemodefb.AnimCurveKeyFb}
 */
apemodefb.AnimCurveFb.prototype.keys = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? (obj || new apemodefb.AnimCurveKeyFb).__init(this.bb.__vector(this.bb_pos + offset) + index * 20, this.bb) : null;
};

/**
 * @returns {number}
 */
apemodefb.AnimCurveFb.prototype.keysLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
apemodefb.AnimCurveFb.startAnimCurveFb = function(builder) {
  builder.startObject(7);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 */
apemodefb.AnimCurveFb.addId = function(builder, id) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} nameId
 */
apemodefb.AnimCurveFb.addNameId = function(builder, nameId) {
  builder.addFieldInt32(1, nameId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} animStackId
 */
apemodefb.AnimCurveFb.addAnimStackId = function(builder, animStackId) {
  builder.addFieldInt32(2, animStackId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} animLayerId
 */
apemodefb.AnimCurveFb.addAnimLayerId = function(builder, animLayerId) {
  builder.addFieldInt32(3, animLayerId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {apemodefb.EAnimCurvePropertyFb} property
 */
apemodefb.AnimCurveFb.addProperty = function(builder, property) {
  builder.addFieldInt8(4, property, apemodefb.EAnimCurvePropertyFb.LclTranslation);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {apemodefb.EAnimCurveChannelFb} channel
 */
apemodefb.AnimCurveFb.addChannel = function(builder, channel) {
  builder.addFieldInt8(5, channel, apemodefb.EAnimCurveChannelFb.X);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} keysOffset
 */
apemodefb.AnimCurveFb.addKeys = function(builder, keysOffset) {
  builder.addFieldOffset(6, keysOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.AnimCurveFb.startKeysVector = function(builder, numElems) {
  builder.startVector(20, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
apemodefb.AnimCurveFb.endAnimCurveFb = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
apemodefb.TextureFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.TextureFb}
 */
apemodefb.TextureFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
apemodefb.TextureFb.prototype.id = function() {
  return this.bb.readUint32(this.bb_pos);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 0);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.TextureFb.prototype.nameId = function() {
  return this.bb.readUint32(this.bb_pos + 4);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_name_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.TextureFb.prototype.fileId = function() {
  return this.bb.readUint32(this.bb_pos + 8);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_file_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.TextureFb.prototype.textureTypeId = function() {
  return this.bb.readUint32(this.bb_pos + 12);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_texture_type_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {apemodefb.EBlendModeFb}
 */
apemodefb.TextureFb.prototype.blendMode = function() {
  return /** @type {apemodefb.EBlendModeFb} */ (this.bb.readUint8(this.bb_pos + 16));
};

/**
 * @param {apemodefb.EBlendModeFb} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_blend_mode = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 16);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {apemodefb.EWrapModeFb}
 */
apemodefb.TextureFb.prototype.wrapModeU = function() {
  return /** @type {apemodefb.EWrapModeFb} */ (this.bb.readUint8(this.bb_pos + 17));
};

/**
 * @param {apemodefb.EWrapModeFb} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_wrap_mode_u = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 17);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {apemodefb.EWrapModeFb}
 */
apemodefb.TextureFb.prototype.wrapModeV = function() {
  return /** @type {apemodefb.EWrapModeFb} */ (this.bb.readUint8(this.bb_pos + 18));
};

/**
 * @param {apemodefb.EWrapModeFb} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_wrap_mode_v = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 18);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.TextureFb.prototype.offsetU = function() {
  return this.bb.readFloat32(this.bb_pos + 20);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_offset_u = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 20);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.TextureFb.prototype.offsetV = function() {
  return this.bb.readFloat32(this.bb_pos + 24);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_offset_v = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 24);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.TextureFb.prototype.scaleU = function() {
  return this.bb.readFloat32(this.bb_pos + 28);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_scale_u = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 28);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.TextureFb.prototype.scaleV = function() {
  return this.bb.readFloat32(this.bb_pos + 32);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_scale_v = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 32);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.TextureFb.prototype.croppingBottom = function() {
  return this.bb.readInt32(this.bb_pos + 36);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_cropping_bottom = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 36);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.TextureFb.prototype.croppingLeft = function() {
  return this.bb.readInt32(this.bb_pos + 40);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_cropping_left = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 40);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.TextureFb.prototype.croppingRight = function() {
  return this.bb.readInt32(this.bb_pos + 44);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_cropping_right = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 44);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.TextureFb.prototype.croppingTop = function() {
  return this.bb.readInt32(this.bb_pos + 48);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_cropping_top = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 48);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.TextureFb.prototype.rotationU = function() {
  return this.bb.readFloat32(this.bb_pos + 52);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_rotation_u = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 52);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.TextureFb.prototype.rotationV = function() {
  return this.bb.readFloat32(this.bb_pos + 56);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_rotation_v = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 56);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.TextureFb.prototype.rotationW = function() {
  return this.bb.readFloat32(this.bb_pos + 60);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_rotation_w = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 60);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.swapUv = function() {
  return !!this.bb.readInt8(this.bb_pos + 64);
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_swap_uv = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 64);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.wipeMode = function() {
  return !!this.bb.readInt8(this.bb_pos + 65);
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_wipe_mode = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 65);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.premultipliedAlpha = function() {
  return !!this.bb.readInt8(this.bb_pos + 66);
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_premultiplied_alpha = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 66);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {apemodefb.EAlphaSourceFb}
 */
apemodefb.TextureFb.prototype.alphaSource = function() {
  return /** @type {apemodefb.EAlphaSourceFb} */ (this.bb.readUint8(this.bb_pos + 67));
};

/**
 * @param {apemodefb.EAlphaSourceFb} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_alpha_source = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 67);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {apemodefb.ETextureUseFb}
 */
apemodefb.TextureFb.prototype.textureUse = function() {
  return /** @type {apemodefb.ETextureUseFb} */ (this.bb.readUint8(this.bb_pos + 68));
};

/**
 * @param {apemodefb.ETextureUseFb} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_texture_use = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 68);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {apemodefb.EMappingTypeFb}
 */
apemodefb.TextureFb.prototype.mappingType = function() {
  return /** @type {apemodefb.EMappingTypeFb} */ (this.bb.readUint8(this.bb_pos + 69));
};

/**
 * @param {apemodefb.EMappingTypeFb} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_mapping_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 69);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {apemodefb.EPlanarMappingNormalFb}
 */
apemodefb.TextureFb.prototype.planarMappingNormal = function() {
  return /** @type {apemodefb.EPlanarMappingNormalFb} */ (this.bb.readUint8(this.bb_pos + 70));
};

/**
 * @param {apemodefb.EPlanarMappingNormalFb} value
 * @returns {boolean}
 */
apemodefb.TextureFb.prototype.mutate_planar_mapping_normal = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 70);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 * @param {number} name_id
 * @param {number} file_id
 * @param {number} texture_type_id
 * @param {apemodefb.EBlendModeFb} blend_mode
 * @param {apemodefb.EWrapModeFb} wrap_mode_u
 * @param {apemodefb.EWrapModeFb} wrap_mode_v
 * @param {number} offset_u
 * @param {number} offset_v
 * @param {number} scale_u
 * @param {number} scale_v
 * @param {number} cropping_bottom
 * @param {number} cropping_left
 * @param {number} cropping_right
 * @param {number} cropping_top
 * @param {number} rotation_u
 * @param {number} rotation_v
 * @param {number} rotation_w
 * @param {boolean} swap_uv
 * @param {boolean} wipe_mode
 * @param {boolean} premultiplied_alpha
 * @param {apemodefb.EAlphaSourceFb} alpha_source
 * @param {apemodefb.ETextureUseFb} texture_use
 * @param {apemodefb.EMappingTypeFb} mapping_type
 * @param {apemodefb.EPlanarMappingNormalFb} planar_mapping_normal
 * @returns {flatbuffers.Offset}
 */
apemodefb.TextureFb.createTextureFb = function(builder, id, name_id, file_id, texture_type_id, blend_mode, wrap_mode_u, wrap_mode_v, offset_u, offset_v, scale_u, scale_v, cropping_bottom, cropping_left, cropping_right, cropping_top, rotation_u, rotation_v, rotation_w, swap_uv, wipe_mode, premultiplied_alpha, alpha_source, texture_use, mapping_type, planar_mapping_normal) {
  builder.prep(4, 72);
  builder.pad(1);
  builder.writeInt8(planar_mapping_normal);
  builder.writeInt8(mapping_type);
  builder.writeInt8(texture_use);
  builder.writeInt8(alpha_source);
  builder.writeInt8(+premultiplied_alpha);
  builder.writeInt8(+wipe_mode);
  builder.writeInt8(+swap_uv);
  builder.writeFloat32(rotation_w);
  builder.writeFloat32(rotation_v);
  builder.writeFloat32(rotation_u);
  builder.writeInt32(cropping_top);
  builder.writeInt32(cropping_right);
  builder.writeInt32(cropping_left);
  builder.writeInt32(cropping_bottom);
  builder.writeFloat32(scale_v);
  builder.writeFloat32(scale_u);
  builder.writeFloat32(offset_v);
  builder.writeFloat32(offset_u);
  builder.pad(1);
  builder.writeInt8(wrap_mode_v);
  builder.writeInt8(wrap_mode_u);
  builder.writeInt8(blend_mode);
  builder.writeInt32(texture_type_id);
  builder.writeInt32(file_id);
  builder.writeInt32(name_id);
  builder.writeInt32(id);
  return builder.offset();
};

/**
 * @constructor
 */
apemodefb.SubmeshFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.SubmeshFb}
 */
apemodefb.SubmeshFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {apemodefb.Vec3Fb=} obj
 * @returns {apemodefb.Vec3Fb|null}
 */
apemodefb.SubmeshFb.prototype.bboxMin = function(obj) {
  return (obj || new apemodefb.Vec3Fb).__init(this.bb_pos, this.bb);
};

/**
 * @param {apemodefb.Vec3Fb=} obj
 * @returns {apemodefb.Vec3Fb|null}
 */
apemodefb.SubmeshFb.prototype.bboxMax = function(obj) {
  return (obj || new apemodefb.Vec3Fb).__init(this.bb_pos + 12, this.bb);
};

/**
 * @param {apemodefb.Vec3Fb=} obj
 * @returns {apemodefb.Vec3Fb|null}
 */
apemodefb.SubmeshFb.prototype.positionOffset = function(obj) {
  return (obj || new apemodefb.Vec3Fb).__init(this.bb_pos + 24, this.bb);
};

/**
 * @param {apemodefb.Vec3Fb=} obj
 * @returns {apemodefb.Vec3Fb|null}
 */
apemodefb.SubmeshFb.prototype.positionScale = function(obj) {
  return (obj || new apemodefb.Vec3Fb).__init(this.bb_pos + 36, this.bb);
};

/**
 * @param {apemodefb.Vec2Fb=} obj
 * @returns {apemodefb.Vec2Fb|null}
 */
apemodefb.SubmeshFb.prototype.uvOffset = function(obj) {
  return (obj || new apemodefb.Vec2Fb).__init(this.bb_pos + 48, this.bb);
};

/**
 * @param {apemodefb.Vec2Fb=} obj
 * @returns {apemodefb.Vec2Fb|null}
 */
apemodefb.SubmeshFb.prototype.uvScale = function(obj) {
  return (obj || new apemodefb.Vec2Fb).__init(this.bb_pos + 56, this.bb);
};

/**
 * @returns {number}
 */
apemodefb.SubmeshFb.prototype.baseVertex = function() {
  return this.bb.readUint32(this.bb_pos + 64);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.SubmeshFb.prototype.mutate_base_vertex = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 64);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.SubmeshFb.prototype.vertexCount = function() {
  return this.bb.readUint32(this.bb_pos + 68);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.SubmeshFb.prototype.mutate_vertex_count = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 68);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.SubmeshFb.prototype.baseIndex = function() {
  return this.bb.readUint32(this.bb_pos + 72);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.SubmeshFb.prototype.mutate_base_index = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 72);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.SubmeshFb.prototype.indexCount = function() {
  return this.bb.readUint32(this.bb_pos + 76);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.SubmeshFb.prototype.mutate_index_count = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 76);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.SubmeshFb.prototype.baseSubset = function() {
  return this.bb.readUint16(this.bb_pos + 80);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.SubmeshFb.prototype.mutate_base_subset = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 80);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint16(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.SubmeshFb.prototype.subsetCount = function() {
  return this.bb.readUint16(this.bb_pos + 82);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.SubmeshFb.prototype.mutate_subset_count = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 82);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint16(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {apemodefb.EVertexFormatFb}
 */
apemodefb.SubmeshFb.prototype.vertexFormat = function() {
  return /** @type {apemodefb.EVertexFormatFb} */ (this.bb.readUint8(this.bb_pos + 84));
};

/**
 * @param {apemodefb.EVertexFormatFb} value
 * @returns {boolean}
 */
apemodefb.SubmeshFb.prototype.mutate_vertex_format = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 84);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.SubmeshFb.prototype.vertexStride = function() {
  return this.bb.readUint16(this.bb_pos + 86);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.SubmeshFb.prototype.mutate_vertex_stride = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 86);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint16(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} bbox_min_x
 * @param {number} bbox_min_y
 * @param {number} bbox_min_z
 * @param {number} bbox_max_x
 * @param {number} bbox_max_y
 * @param {number} bbox_max_z
 * @param {number} position_offset_x
 * @param {number} position_offset_y
 * @param {number} position_offset_z
 * @param {number} position_scale_x
 * @param {number} position_scale_y
 * @param {number} position_scale_z
 * @param {number} uv_offset_x
 * @param {number} uv_offset_y
 * @param {number} uv_scale_x
 * @param {number} uv_scale_y
 * @param {number} base_vertex
 * @param {number} vertex_count
 * @param {number} base_index
 * @param {number} index_count
 * @param {number} base_subset
 * @param {number} subset_count
 * @param {apemodefb.EVertexFormatFb} vertex_format
 * @param {number} vertex_stride
 * @returns {flatbuffers.Offset}
 */
apemodefb.SubmeshFb.createSubmeshFb = function(builder, bbox_min_x, bbox_min_y, bbox_min_z, bbox_max_x, bbox_max_y, bbox_max_z, position_offset_x, position_offset_y, position_offset_z, position_scale_x, position_scale_y, position_scale_z, uv_offset_x, uv_offset_y, uv_scale_x, uv_scale_y, base_vertex, vertex_count, base_index, index_count, base_subset, subset_count, vertex_format, vertex_stride) {
  builder.prep(4, 88);
  builder.writeInt16(vertex_stride);
  builder.pad(1);
  builder.writeInt8(vertex_format);
  builder.writeInt16(subset_count);
  builder.writeInt16(base_subset);
  builder.writeInt32(index_count);
  builder.writeInt32(base_index);
  builder.writeInt32(vertex_count);
  builder.writeInt32(base_vertex);
  builder.prep(4, 8);
  builder.writeFloat32(uv_scale_y);
  builder.writeFloat32(uv_scale_x);
  builder.prep(4, 8);
  builder.writeFloat32(uv_offset_y);
  builder.writeFloat32(uv_offset_x);
  builder.prep(4, 12);
  builder.writeFloat32(position_scale_z);
  builder.writeFloat32(position_scale_y);
  builder.writeFloat32(position_scale_x);
  builder.prep(4, 12);
  builder.writeFloat32(position_offset_z);
  builder.writeFloat32(position_offset_y);
  builder.writeFloat32(position_offset_x);
  builder.prep(4, 12);
  builder.writeFloat32(bbox_max_z);
  builder.writeFloat32(bbox_max_y);
  builder.writeFloat32(bbox_max_x);
  builder.prep(4, 12);
  builder.writeFloat32(bbox_min_z);
  builder.writeFloat32(bbox_min_y);
  builder.writeFloat32(bbox_min_x);
  return builder.offset();
};

/**
 * @constructor
 */
apemodefb.SubsetFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.SubsetFb}
 */
apemodefb.SubsetFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
apemodefb.SubsetFb.prototype.materialId = function() {
  return this.bb.readUint32(this.bb_pos);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.SubsetFb.prototype.mutate_material_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 0);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.SubsetFb.prototype.baseIndex = function() {
  return this.bb.readUint32(this.bb_pos + 4);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.SubsetFb.prototype.mutate_base_index = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.SubsetFb.prototype.indexCount = function() {
  return this.bb.readUint32(this.bb_pos + 8);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.SubsetFb.prototype.mutate_index_count = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} material_id
 * @param {number} base_index
 * @param {number} index_count
 * @returns {flatbuffers.Offset}
 */
apemodefb.SubsetFb.createSubsetFb = function(builder, material_id, base_index, index_count) {
  builder.prep(4, 12);
  builder.writeInt32(index_count);
  builder.writeInt32(base_index);
  builder.writeInt32(material_id);
  return builder.offset();
};

/**
 * @constructor
 */
apemodefb.NameFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.NameFb}
 */
apemodefb.NameFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {apemodefb.NameFb=} obj
 * @returns {apemodefb.NameFb}
 */
apemodefb.NameFb.getRootAsNameFb = function(bb, obj) {
  return (obj || new apemodefb.NameFb).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
apemodefb.NameFb.prototype.h = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Long} value
 * @returns {boolean}
 */
apemodefb.NameFb.prototype.mutate_h = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint64(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
apemodefb.NameFb.prototype.v = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
apemodefb.NameFb.startNameFb = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} h
 */
apemodefb.NameFb.addH = function(builder, h) {
  builder.addFieldInt64(0, h, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} vOffset
 */
apemodefb.NameFb.addV = function(builder, vOffset) {
  builder.addFieldOffset(1, vOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
apemodefb.NameFb.endNameFb = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
apemodefb.TransformFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.TransformFb}
 */
apemodefb.TransformFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {apemodefb.Vec3Fb=} obj
 * @returns {apemodefb.Vec3Fb|null}
 */
apemodefb.TransformFb.prototype.translation = function(obj) {
  return (obj || new apemodefb.Vec3Fb).__init(this.bb_pos, this.bb);
};

/**
 * @param {apemodefb.Vec3Fb=} obj
 * @returns {apemodefb.Vec3Fb|null}
 */
apemodefb.TransformFb.prototype.rotationOffset = function(obj) {
  return (obj || new apemodefb.Vec3Fb).__init(this.bb_pos + 12, this.bb);
};

/**
 * @param {apemodefb.Vec3Fb=} obj
 * @returns {apemodefb.Vec3Fb|null}
 */
apemodefb.TransformFb.prototype.rotationPivot = function(obj) {
  return (obj || new apemodefb.Vec3Fb).__init(this.bb_pos + 24, this.bb);
};

/**
 * @param {apemodefb.Vec3Fb=} obj
 * @returns {apemodefb.Vec3Fb|null}
 */
apemodefb.TransformFb.prototype.preRotation = function(obj) {
  return (obj || new apemodefb.Vec3Fb).__init(this.bb_pos + 36, this.bb);
};

/**
 * @param {apemodefb.Vec3Fb=} obj
 * @returns {apemodefb.Vec3Fb|null}
 */
apemodefb.TransformFb.prototype.postRotation = function(obj) {
  return (obj || new apemodefb.Vec3Fb).__init(this.bb_pos + 48, this.bb);
};

/**
 * @param {apemodefb.Vec3Fb=} obj
 * @returns {apemodefb.Vec3Fb|null}
 */
apemodefb.TransformFb.prototype.rotation = function(obj) {
  return (obj || new apemodefb.Vec3Fb).__init(this.bb_pos + 60, this.bb);
};

/**
 * @param {apemodefb.Vec3Fb=} obj
 * @returns {apemodefb.Vec3Fb|null}
 */
apemodefb.TransformFb.prototype.scalingOffset = function(obj) {
  return (obj || new apemodefb.Vec3Fb).__init(this.bb_pos + 72, this.bb);
};

/**
 * @param {apemodefb.Vec3Fb=} obj
 * @returns {apemodefb.Vec3Fb|null}
 */
apemodefb.TransformFb.prototype.scalingPivot = function(obj) {
  return (obj || new apemodefb.Vec3Fb).__init(this.bb_pos + 84, this.bb);
};

/**
 * @param {apemodefb.Vec3Fb=} obj
 * @returns {apemodefb.Vec3Fb|null}
 */
apemodefb.TransformFb.prototype.scaling = function(obj) {
  return (obj || new apemodefb.Vec3Fb).__init(this.bb_pos + 96, this.bb);
};

/**
 * @param {apemodefb.Vec3Fb=} obj
 * @returns {apemodefb.Vec3Fb|null}
 */
apemodefb.TransformFb.prototype.geometricTranslation = function(obj) {
  return (obj || new apemodefb.Vec3Fb).__init(this.bb_pos + 108, this.bb);
};

/**
 * @param {apemodefb.Vec3Fb=} obj
 * @returns {apemodefb.Vec3Fb|null}
 */
apemodefb.TransformFb.prototype.geometricRotation = function(obj) {
  return (obj || new apemodefb.Vec3Fb).__init(this.bb_pos + 120, this.bb);
};

/**
 * @param {apemodefb.Vec3Fb=} obj
 * @returns {apemodefb.Vec3Fb|null}
 */
apemodefb.TransformFb.prototype.geometricScaling = function(obj) {
  return (obj || new apemodefb.Vec3Fb).__init(this.bb_pos + 132, this.bb);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} translation_x
 * @param {number} translation_y
 * @param {number} translation_z
 * @param {number} rotation_offset_x
 * @param {number} rotation_offset_y
 * @param {number} rotation_offset_z
 * @param {number} rotation_pivot_x
 * @param {number} rotation_pivot_y
 * @param {number} rotation_pivot_z
 * @param {number} pre_rotation_x
 * @param {number} pre_rotation_y
 * @param {number} pre_rotation_z
 * @param {number} post_rotation_x
 * @param {number} post_rotation_y
 * @param {number} post_rotation_z
 * @param {number} rotation_x
 * @param {number} rotation_y
 * @param {number} rotation_z
 * @param {number} scaling_offset_x
 * @param {number} scaling_offset_y
 * @param {number} scaling_offset_z
 * @param {number} scaling_pivot_x
 * @param {number} scaling_pivot_y
 * @param {number} scaling_pivot_z
 * @param {number} scaling_x
 * @param {number} scaling_y
 * @param {number} scaling_z
 * @param {number} geometric_translation_x
 * @param {number} geometric_translation_y
 * @param {number} geometric_translation_z
 * @param {number} geometric_rotation_x
 * @param {number} geometric_rotation_y
 * @param {number} geometric_rotation_z
 * @param {number} geometric_scaling_x
 * @param {number} geometric_scaling_y
 * @param {number} geometric_scaling_z
 * @returns {flatbuffers.Offset}
 */
apemodefb.TransformFb.createTransformFb = function(builder, translation_x, translation_y, translation_z, rotation_offset_x, rotation_offset_y, rotation_offset_z, rotation_pivot_x, rotation_pivot_y, rotation_pivot_z, pre_rotation_x, pre_rotation_y, pre_rotation_z, post_rotation_x, post_rotation_y, post_rotation_z, rotation_x, rotation_y, rotation_z, scaling_offset_x, scaling_offset_y, scaling_offset_z, scaling_pivot_x, scaling_pivot_y, scaling_pivot_z, scaling_x, scaling_y, scaling_z, geometric_translation_x, geometric_translation_y, geometric_translation_z, geometric_rotation_x, geometric_rotation_y, geometric_rotation_z, geometric_scaling_x, geometric_scaling_y, geometric_scaling_z) {
  builder.prep(4, 144);
  builder.prep(4, 12);
  builder.writeFloat32(geometric_scaling_z);
  builder.writeFloat32(geometric_scaling_y);
  builder.writeFloat32(geometric_scaling_x);
  builder.prep(4, 12);
  builder.writeFloat32(geometric_rotation_z);
  builder.writeFloat32(geometric_rotation_y);
  builder.writeFloat32(geometric_rotation_x);
  builder.prep(4, 12);
  builder.writeFloat32(geometric_translation_z);
  builder.writeFloat32(geometric_translation_y);
  builder.writeFloat32(geometric_translation_x);
  builder.prep(4, 12);
  builder.writeFloat32(scaling_z);
  builder.writeFloat32(scaling_y);
  builder.writeFloat32(scaling_x);
  builder.prep(4, 12);
  builder.writeFloat32(scaling_pivot_z);
  builder.writeFloat32(scaling_pivot_y);
  builder.writeFloat32(scaling_pivot_x);
  builder.prep(4, 12);
  builder.writeFloat32(scaling_offset_z);
  builder.writeFloat32(scaling_offset_y);
  builder.writeFloat32(scaling_offset_x);
  builder.prep(4, 12);
  builder.writeFloat32(rotation_z);
  builder.writeFloat32(rotation_y);
  builder.writeFloat32(rotation_x);
  builder.prep(4, 12);
  builder.writeFloat32(post_rotation_z);
  builder.writeFloat32(post_rotation_y);
  builder.writeFloat32(post_rotation_x);
  builder.prep(4, 12);
  builder.writeFloat32(pre_rotation_z);
  builder.writeFloat32(pre_rotation_y);
  builder.writeFloat32(pre_rotation_x);
  builder.prep(4, 12);
  builder.writeFloat32(rotation_pivot_z);
  builder.writeFloat32(rotation_pivot_y);
  builder.writeFloat32(rotation_pivot_x);
  builder.prep(4, 12);
  builder.writeFloat32(rotation_offset_z);
  builder.writeFloat32(rotation_offset_y);
  builder.writeFloat32(rotation_offset_x);
  builder.prep(4, 12);
  builder.writeFloat32(translation_z);
  builder.writeFloat32(translation_y);
  builder.writeFloat32(translation_x);
  return builder.offset();
};

/**
 * @constructor
 */
apemodefb.SkinFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.SkinFb}
 */
apemodefb.SkinFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {apemodefb.SkinFb=} obj
 * @returns {apemodefb.SkinFb}
 */
apemodefb.SkinFb.getRootAsSkinFb = function(bb, obj) {
  return (obj || new apemodefb.SkinFb).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
apemodefb.SkinFb.prototype.nameId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.SkinFb.prototype.mutate_name_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {number} index
 * @returns {number}
 */
apemodefb.SkinFb.prototype.linksIds = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
apemodefb.SkinFb.prototype.linksIdsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint32Array}
 */
apemodefb.SkinFb.prototype.linksIdsArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
apemodefb.SkinFb.startSkinFb = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} nameId
 */
apemodefb.SkinFb.addNameId = function(builder, nameId) {
  builder.addFieldInt32(0, nameId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} linksIdsOffset
 */
apemodefb.SkinFb.addLinksIds = function(builder, linksIdsOffset) {
  builder.addFieldOffset(1, linksIdsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
apemodefb.SkinFb.createLinksIdsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.SkinFb.startLinksIdsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
apemodefb.SkinFb.endSkinFb = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
apemodefb.MeshFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.MeshFb}
 */
apemodefb.MeshFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {apemodefb.MeshFb=} obj
 * @returns {apemodefb.MeshFb}
 */
apemodefb.MeshFb.getRootAsMeshFb = function(bb, obj) {
  return (obj || new apemodefb.MeshFb).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
apemodefb.MeshFb.prototype.vertices = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
apemodefb.MeshFb.prototype.verticesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
apemodefb.MeshFb.prototype.verticesArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @param {apemodefb.SubmeshFb=} obj
 * @returns {apemodefb.SubmeshFb}
 */
apemodefb.MeshFb.prototype.submeshes = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new apemodefb.SubmeshFb).__init(this.bb.__vector(this.bb_pos + offset) + index * 88, this.bb) : null;
};

/**
 * @returns {number}
 */
apemodefb.MeshFb.prototype.submeshesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {apemodefb.SubsetFb=} obj
 * @returns {apemodefb.SubsetFb}
 */
apemodefb.MeshFb.prototype.subsets = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new apemodefb.SubsetFb).__init(this.bb.__vector(this.bb_pos + offset) + index * 12, this.bb) : null;
};

/**
 * @returns {number}
 */
apemodefb.MeshFb.prototype.subsetsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @returns {number}
 */
apemodefb.MeshFb.prototype.indices = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
apemodefb.MeshFb.prototype.indicesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
apemodefb.MeshFb.prototype.indicesArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns {apemodefb.EIndexTypeFb}
 */
apemodefb.MeshFb.prototype.indexType = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? /** @type {apemodefb.EIndexTypeFb} */ (this.bb.readUint8(this.bb_pos + offset)) : apemodefb.EIndexTypeFb.UInt16;
};

/**
 * @param {apemodefb.EIndexTypeFb} value
 * @returns {boolean}
 */
apemodefb.MeshFb.prototype.mutate_index_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.MeshFb.prototype.skinId = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.MeshFb.prototype.mutate_skin_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 14);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
apemodefb.MeshFb.startMeshFb = function(builder) {
  builder.startObject(6);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} verticesOffset
 */
apemodefb.MeshFb.addVertices = function(builder, verticesOffset) {
  builder.addFieldOffset(0, verticesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
apemodefb.MeshFb.createVerticesVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.MeshFb.startVerticesVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} submeshesOffset
 */
apemodefb.MeshFb.addSubmeshes = function(builder, submeshesOffset) {
  builder.addFieldOffset(1, submeshesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.MeshFb.startSubmeshesVector = function(builder, numElems) {
  builder.startVector(88, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} subsetsOffset
 */
apemodefb.MeshFb.addSubsets = function(builder, subsetsOffset) {
  builder.addFieldOffset(2, subsetsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.MeshFb.startSubsetsVector = function(builder, numElems) {
  builder.startVector(12, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} indicesOffset
 */
apemodefb.MeshFb.addIndices = function(builder, indicesOffset) {
  builder.addFieldOffset(3, indicesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
apemodefb.MeshFb.createIndicesVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.MeshFb.startIndicesVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {apemodefb.EIndexTypeFb} indexType
 */
apemodefb.MeshFb.addIndexType = function(builder, indexType) {
  builder.addFieldInt8(4, indexType, apemodefb.EIndexTypeFb.UInt16);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} skinId
 */
apemodefb.MeshFb.addSkinId = function(builder, skinId) {
  builder.addFieldInt32(5, skinId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
apemodefb.MeshFb.endMeshFb = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
apemodefb.MaterialPropFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.MaterialPropFb}
 */
apemodefb.MaterialPropFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
apemodefb.MaterialPropFb.prototype.nameId = function() {
  return this.bb.readUint32(this.bb_pos);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.MaterialPropFb.prototype.mutate_name_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 0);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.MaterialPropFb.prototype.valueId = function() {
  return this.bb.readUint32(this.bb_pos + 4);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.MaterialPropFb.prototype.mutate_value_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} name_id
 * @param {number} value_id
 * @returns {flatbuffers.Offset}
 */
apemodefb.MaterialPropFb.createMaterialPropFb = function(builder, name_id, value_id) {
  builder.prep(4, 8);
  builder.writeInt32(value_id);
  builder.writeInt32(name_id);
  return builder.offset();
};

/**
 * @constructor
 */
apemodefb.MaterialFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.MaterialFb}
 */
apemodefb.MaterialFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {apemodefb.MaterialFb=} obj
 * @returns {apemodefb.MaterialFb}
 */
apemodefb.MaterialFb.getRootAsMaterialFb = function(bb, obj) {
  return (obj || new apemodefb.MaterialFb).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
apemodefb.MaterialFb.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.MaterialFb.prototype.mutate_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.MaterialFb.prototype.nameId = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.MaterialFb.prototype.mutate_name_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {number} index
 * @param {apemodefb.MaterialPropFb=} obj
 * @returns {apemodefb.MaterialPropFb}
 */
apemodefb.MaterialFb.prototype.properties = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new apemodefb.MaterialPropFb).__init(this.bb.__vector(this.bb_pos + offset) + index * 8, this.bb) : null;
};

/**
 * @returns {number}
 */
apemodefb.MaterialFb.prototype.propertiesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {apemodefb.MaterialPropFb=} obj
 * @returns {apemodefb.MaterialPropFb}
 */
apemodefb.MaterialFb.prototype.textureProperties = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new apemodefb.MaterialPropFb).__init(this.bb.__vector(this.bb_pos + offset) + index * 8, this.bb) : null;
};

/**
 * @returns {number}
 */
apemodefb.MaterialFb.prototype.texturePropertiesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
apemodefb.MaterialFb.startMaterialFb = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 */
apemodefb.MaterialFb.addId = function(builder, id) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} nameId
 */
apemodefb.MaterialFb.addNameId = function(builder, nameId) {
  builder.addFieldInt32(1, nameId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} propertiesOffset
 */
apemodefb.MaterialFb.addProperties = function(builder, propertiesOffset) {
  builder.addFieldOffset(2, propertiesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.MaterialFb.startPropertiesVector = function(builder, numElems) {
  builder.startVector(8, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} texturePropertiesOffset
 */
apemodefb.MaterialFb.addTextureProperties = function(builder, texturePropertiesOffset) {
  builder.addFieldOffset(3, texturePropertiesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.MaterialFb.startTexturePropertiesVector = function(builder, numElems) {
  builder.startVector(8, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
apemodefb.MaterialFb.endMaterialFb = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
apemodefb.CameraFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.CameraFb}
 */
apemodefb.CameraFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
apemodefb.CameraFb.prototype.id = function() {
  return this.bb.readUint32(this.bb_pos);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.CameraFb.prototype.mutate_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 0);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.CameraFb.prototype.nameId = function() {
  return this.bb.readUint32(this.bb_pos + 4);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.CameraFb.prototype.mutate_name_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {apemodefb.Vec3Fb=} obj
 * @returns {apemodefb.Vec3Fb|null}
 */
apemodefb.CameraFb.prototype.up = function(obj) {
  return (obj || new apemodefb.Vec3Fb).__init(this.bb_pos + 8, this.bb);
};

/**
 * @param {apemodefb.Vec2Fb=} obj
 * @returns {apemodefb.Vec2Fb|null}
 */
apemodefb.CameraFb.prototype.aspect = function(obj) {
  return (obj || new apemodefb.Vec2Fb).__init(this.bb_pos + 20, this.bb);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 * @param {number} name_id
 * @param {number} up_x
 * @param {number} up_y
 * @param {number} up_z
 * @param {number} aspect_x
 * @param {number} aspect_y
 * @returns {flatbuffers.Offset}
 */
apemodefb.CameraFb.createCameraFb = function(builder, id, name_id, up_x, up_y, up_z, aspect_x, aspect_y) {
  builder.prep(4, 28);
  builder.prep(4, 8);
  builder.writeFloat32(aspect_y);
  builder.writeFloat32(aspect_x);
  builder.prep(4, 12);
  builder.writeFloat32(up_z);
  builder.writeFloat32(up_y);
  builder.writeFloat32(up_x);
  builder.writeInt32(name_id);
  builder.writeInt32(id);
  return builder.offset();
};

/**
 * @constructor
 */
apemodefb.LightFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.LightFb}
 */
apemodefb.LightFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
apemodefb.LightFb.prototype.id = function() {
  return this.bb.readUint32(this.bb_pos);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.LightFb.prototype.mutate_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 0);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.LightFb.prototype.nameId = function() {
  return this.bb.readUint32(this.bb_pos + 4);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.LightFb.prototype.mutate_name_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {apemodefb.ELightTypeFb}
 */
apemodefb.LightFb.prototype.lightType = function() {
  return /** @type {apemodefb.ELightTypeFb} */ (this.bb.readUint8(this.bb_pos + 8));
};

/**
 * @param {apemodefb.ELightTypeFb} value
 * @returns {boolean}
 */
apemodefb.LightFb.prototype.mutate_light_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {apemodefb.EAreaLightTypeFb}
 */
apemodefb.LightFb.prototype.areaLightType = function() {
  return /** @type {apemodefb.EAreaLightTypeFb} */ (this.bb.readUint8(this.bb_pos + 9));
};

/**
 * @param {apemodefb.EAreaLightTypeFb} value
 * @returns {boolean}
 */
apemodefb.LightFb.prototype.mutate_area_light_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 9);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {apemodefb.Vec3Fb=} obj
 * @returns {apemodefb.Vec3Fb|null}
 */
apemodefb.LightFb.prototype.color = function(obj) {
  return (obj || new apemodefb.Vec3Fb).__init(this.bb_pos + 12, this.bb);
};

/**
 * @returns {number}
 */
apemodefb.LightFb.prototype.fog = function() {
  return this.bb.readFloat32(this.bb_pos + 24);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.LightFb.prototype.mutate_fog = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 24);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.LightFb.prototype.intensity = function() {
  return this.bb.readFloat32(this.bb_pos + 28);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.LightFb.prototype.mutate_intensity = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 28);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.LightFb.prototype.innerAngle = function() {
  return this.bb.readFloat32(this.bb_pos + 32);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.LightFb.prototype.mutate_inner_angle = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 32);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.LightFb.prototype.nearAttenuationStart = function() {
  return this.bb.readFloat32(this.bb_pos + 36);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.LightFb.prototype.mutate_near_attenuation_start = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 36);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.LightFb.prototype.nearAttenuationEnd = function() {
  return this.bb.readFloat32(this.bb_pos + 40);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.LightFb.prototype.mutate_near_attenuation_end = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 40);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.LightFb.prototype.farAttenuationStart = function() {
  return this.bb.readFloat32(this.bb_pos + 44);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.LightFb.prototype.mutate_far_attenuation_start = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 44);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.LightFb.prototype.farAttenuationEnd = function() {
  return this.bb.readFloat32(this.bb_pos + 48);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.LightFb.prototype.mutate_far_attenuation_end = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 48);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.LightFb.prototype.outerAngle = function() {
  return this.bb.readFloat32(this.bb_pos + 52);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.LightFb.prototype.mutate_outer_angle = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 52);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.LightFb.prototype.decayStart = function() {
  return this.bb.readFloat32(this.bb_pos + 56);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.LightFb.prototype.mutate_decay_start = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 56);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
apemodefb.LightFb.prototype.castsShadows = function() {
  return !!this.bb.readInt8(this.bb_pos + 60);
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
apemodefb.LightFb.prototype.mutate_casts_shadows = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 60);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 * @param {number} name_id
 * @param {apemodefb.ELightTypeFb} light_type
 * @param {apemodefb.EAreaLightTypeFb} area_light_type
 * @param {number} color_x
 * @param {number} color_y
 * @param {number} color_z
 * @param {number} fog
 * @param {number} intensity
 * @param {number} inner_angle
 * @param {number} near_attenuation_start
 * @param {number} near_attenuation_end
 * @param {number} far_attenuation_start
 * @param {number} far_attenuation_end
 * @param {number} outer_angle
 * @param {number} decay_start
 * @param {boolean} casts_shadows
 * @returns {flatbuffers.Offset}
 */
apemodefb.LightFb.createLightFb = function(builder, id, name_id, light_type, area_light_type, color_x, color_y, color_z, fog, intensity, inner_angle, near_attenuation_start, near_attenuation_end, far_attenuation_start, far_attenuation_end, outer_angle, decay_start, casts_shadows) {
  builder.prep(4, 64);
  builder.pad(3);
  builder.writeInt8(+casts_shadows);
  builder.writeFloat32(decay_start);
  builder.writeFloat32(outer_angle);
  builder.writeFloat32(far_attenuation_end);
  builder.writeFloat32(far_attenuation_start);
  builder.writeFloat32(near_attenuation_end);
  builder.writeFloat32(near_attenuation_start);
  builder.writeFloat32(inner_angle);
  builder.writeFloat32(intensity);
  builder.writeFloat32(fog);
  builder.prep(4, 12);
  builder.writeFloat32(color_z);
  builder.writeFloat32(color_y);
  builder.writeFloat32(color_x);
  builder.pad(2);
  builder.writeInt8(area_light_type);
  builder.writeInt8(light_type);
  builder.writeInt32(name_id);
  builder.writeInt32(id);
  return builder.offset();
};

/**
 * @constructor
 */
apemodefb.NodeFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.NodeFb}
 */
apemodefb.NodeFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {apemodefb.NodeFb=} obj
 * @returns {apemodefb.NodeFb}
 */
apemodefb.NodeFb.getRootAsNodeFb = function(bb, obj) {
  return (obj || new apemodefb.NodeFb).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
apemodefb.NodeFb.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.NodeFb.prototype.mutate_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.NodeFb.prototype.meshId = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.NodeFb.prototype.mutate_mesh_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.NodeFb.prototype.lightId = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.NodeFb.prototype.mutate_light_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.NodeFb.prototype.cameraId = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.NodeFb.prototype.mutate_camera_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.NodeFb.prototype.nameId = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.NodeFb.prototype.mutate_name_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {apemodefb.ECullingTypeFb}
 */
apemodefb.NodeFb.prototype.cullingType = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? /** @type {apemodefb.ECullingTypeFb} */ (this.bb.readUint8(this.bb_pos + offset)) : apemodefb.ECullingTypeFb.CullingOff;
};

/**
 * @param {apemodefb.ECullingTypeFb} value
 * @returns {boolean}
 */
apemodefb.NodeFb.prototype.mutate_culling_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 14);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {number} index
 * @returns {number}
 */
apemodefb.NodeFb.prototype.childIds = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readUint32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
apemodefb.NodeFb.prototype.childIdsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint32Array}
 */
apemodefb.NodeFb.prototype.childIdsArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
apemodefb.NodeFb.prototype.animCurveIds = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readUint32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
apemodefb.NodeFb.prototype.animCurveIdsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint32Array}
 */
apemodefb.NodeFb.prototype.animCurveIdsArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
apemodefb.NodeFb.startNodeFb = function(builder) {
  builder.startObject(8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 */
apemodefb.NodeFb.addId = function(builder, id) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} meshId
 */
apemodefb.NodeFb.addMeshId = function(builder, meshId) {
  builder.addFieldInt32(1, meshId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} lightId
 */
apemodefb.NodeFb.addLightId = function(builder, lightId) {
  builder.addFieldInt32(2, lightId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} cameraId
 */
apemodefb.NodeFb.addCameraId = function(builder, cameraId) {
  builder.addFieldInt32(3, cameraId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} nameId
 */
apemodefb.NodeFb.addNameId = function(builder, nameId) {
  builder.addFieldInt32(4, nameId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {apemodefb.ECullingTypeFb} cullingType
 */
apemodefb.NodeFb.addCullingType = function(builder, cullingType) {
  builder.addFieldInt8(5, cullingType, apemodefb.ECullingTypeFb.CullingOff);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} childIdsOffset
 */
apemodefb.NodeFb.addChildIds = function(builder, childIdsOffset) {
  builder.addFieldOffset(6, childIdsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
apemodefb.NodeFb.createChildIdsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.NodeFb.startChildIdsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} animCurveIdsOffset
 */
apemodefb.NodeFb.addAnimCurveIds = function(builder, animCurveIdsOffset) {
  builder.addFieldOffset(7, animCurveIdsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
apemodefb.NodeFb.createAnimCurveIdsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.NodeFb.startAnimCurveIdsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
apemodefb.NodeFb.endNodeFb = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
apemodefb.FileFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.FileFb}
 */
apemodefb.FileFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {apemodefb.FileFb=} obj
 * @returns {apemodefb.FileFb}
 */
apemodefb.FileFb.getRootAsFileFb = function(bb, obj) {
  return (obj || new apemodefb.FileFb).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
apemodefb.FileFb.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.FileFb.prototype.mutate_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
apemodefb.FileFb.prototype.nameId = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
apemodefb.FileFb.prototype.mutate_name_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {number} index
 * @returns {number}
 */
apemodefb.FileFb.prototype.buffer = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
apemodefb.FileFb.prototype.bufferLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
apemodefb.FileFb.prototype.bufferArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
apemodefb.FileFb.startFileFb = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 */
apemodefb.FileFb.addId = function(builder, id) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} nameId
 */
apemodefb.FileFb.addNameId = function(builder, nameId) {
  builder.addFieldInt32(1, nameId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} bufferOffset
 */
apemodefb.FileFb.addBuffer = function(builder, bufferOffset) {
  builder.addFieldOffset(2, bufferOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
apemodefb.FileFb.createBufferVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.FileFb.startBufferVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
apemodefb.FileFb.endFileFb = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
apemodefb.SceneFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {apemodefb.SceneFb}
 */
apemodefb.SceneFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {apemodefb.SceneFb=} obj
 * @returns {apemodefb.SceneFb}
 */
apemodefb.SceneFb.getRootAsSceneFb = function(bb, obj) {
  return (obj || new apemodefb.SceneFb).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {boolean}
 */
apemodefb.SceneFb.bufferHasIdentifier = function(bb) {
  return bb.__has_identifier('FBXP');
};

/**
 * @returns {apemodefb.EVersionFb}
 */
apemodefb.SceneFb.prototype.version = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {apemodefb.EVersionFb} */ (this.bb.readUint8(this.bb_pos + offset)) : /** @type {apemodefb.EVersionFb} */ (0);
};

/**
 * @param {apemodefb.EVersionFb} value
 * @returns {boolean}
 */
apemodefb.SceneFb.prototype.mutate_version = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {number} index
 * @param {apemodefb.TransformFb=} obj
 * @returns {apemodefb.TransformFb}
 */
apemodefb.SceneFb.prototype.transforms = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new apemodefb.TransformFb).__init(this.bb.__vector(this.bb_pos + offset) + index * 144, this.bb) : null;
};

/**
 * @returns {number}
 */
apemodefb.SceneFb.prototype.transformsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {apemodefb.NodeFb=} obj
 * @returns {apemodefb.NodeFb}
 */
apemodefb.SceneFb.prototype.nodes = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new apemodefb.NodeFb).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
apemodefb.SceneFb.prototype.nodesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {apemodefb.MeshFb=} obj
 * @returns {apemodefb.MeshFb}
 */
apemodefb.SceneFb.prototype.meshes = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new apemodefb.MeshFb).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
apemodefb.SceneFb.prototype.meshesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {apemodefb.AnimStackFb=} obj
 * @returns {apemodefb.AnimStackFb}
 */
apemodefb.SceneFb.prototype.animStacks = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new apemodefb.AnimStackFb).__init(this.bb.__vector(this.bb_pos + offset) + index * 8, this.bb) : null;
};

/**
 * @returns {number}
 */
apemodefb.SceneFb.prototype.animStacksLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {apemodefb.AnimLayerFb=} obj
 * @returns {apemodefb.AnimLayerFb}
 */
apemodefb.SceneFb.prototype.animLayers = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? (obj || new apemodefb.AnimLayerFb).__init(this.bb.__vector(this.bb_pos + offset) + index * 12, this.bb) : null;
};

/**
 * @returns {number}
 */
apemodefb.SceneFb.prototype.animLayersLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {apemodefb.AnimCurveFb=} obj
 * @returns {apemodefb.AnimCurveFb}
 */
apemodefb.SceneFb.prototype.animCurves = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? (obj || new apemodefb.AnimCurveFb).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
apemodefb.SceneFb.prototype.animCurvesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {apemodefb.MaterialFb=} obj
 * @returns {apemodefb.MaterialFb}
 */
apemodefb.SceneFb.prototype.materials = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? (obj || new apemodefb.MaterialFb).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
apemodefb.SceneFb.prototype.materialsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {apemodefb.TextureFb=} obj
 * @returns {apemodefb.TextureFb}
 */
apemodefb.SceneFb.prototype.textures = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? (obj || new apemodefb.TextureFb).__init(this.bb.__vector(this.bb_pos + offset) + index * 72, this.bb) : null;
};

/**
 * @returns {number}
 */
apemodefb.SceneFb.prototype.texturesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {apemodefb.CameraFb=} obj
 * @returns {apemodefb.CameraFb}
 */
apemodefb.SceneFb.prototype.cameras = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? (obj || new apemodefb.CameraFb).__init(this.bb.__vector(this.bb_pos + offset) + index * 28, this.bb) : null;
};

/**
 * @returns {number}
 */
apemodefb.SceneFb.prototype.camerasLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {apemodefb.LightFb=} obj
 * @returns {apemodefb.LightFb}
 */
apemodefb.SceneFb.prototype.lights = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? (obj || new apemodefb.LightFb).__init(this.bb.__vector(this.bb_pos + offset) + index * 64, this.bb) : null;
};

/**
 * @returns {number}
 */
apemodefb.SceneFb.prototype.lightsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {apemodefb.SkinFb=} obj
 * @returns {apemodefb.SkinFb}
 */
apemodefb.SceneFb.prototype.skins = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? (obj || new apemodefb.SkinFb).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
apemodefb.SceneFb.prototype.skinsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {apemodefb.FileFb=} obj
 * @returns {apemodefb.FileFb}
 */
apemodefb.SceneFb.prototype.files = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? (obj || new apemodefb.FileFb).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
apemodefb.SceneFb.prototype.filesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @returns {boolean}
 */
apemodefb.SceneFb.prototype.boolValues = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 30);
  return offset ? !!this.bb.readInt8(this.bb.__vector(this.bb_pos + offset) + index) : false;
};

/**
 * @returns {number}
 */
apemodefb.SceneFb.prototype.boolValuesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 30);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int8Array}
 */
apemodefb.SceneFb.prototype.boolValuesArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 30);
  return offset ? new Int8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
apemodefb.SceneFb.prototype.intValues = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 32);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
apemodefb.SceneFb.prototype.intValuesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 32);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
apemodefb.SceneFb.prototype.intValuesArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 32);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
apemodefb.SceneFb.prototype.floatValues = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 34);
  return offset ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
apemodefb.SceneFb.prototype.floatValuesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 34);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Float32Array}
 */
apemodefb.SceneFb.prototype.floatValuesArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 34);
  return offset ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
apemodefb.SceneFb.prototype.stringValues = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 36);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
apemodefb.SceneFb.prototype.stringValuesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 36);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
apemodefb.SceneFb.startSceneFb = function(builder) {
  builder.startObject(17);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {apemodefb.EVersionFb} version
 */
apemodefb.SceneFb.addVersion = function(builder, version) {
  builder.addFieldInt8(0, version, /** @type {apemodefb.EVersionFb} */ (0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} transformsOffset
 */
apemodefb.SceneFb.addTransforms = function(builder, transformsOffset) {
  builder.addFieldOffset(1, transformsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.SceneFb.startTransformsVector = function(builder, numElems) {
  builder.startVector(144, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nodesOffset
 */
apemodefb.SceneFb.addNodes = function(builder, nodesOffset) {
  builder.addFieldOffset(2, nodesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
apemodefb.SceneFb.createNodesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.SceneFb.startNodesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} meshesOffset
 */
apemodefb.SceneFb.addMeshes = function(builder, meshesOffset) {
  builder.addFieldOffset(3, meshesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
apemodefb.SceneFb.createMeshesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.SceneFb.startMeshesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} animStacksOffset
 */
apemodefb.SceneFb.addAnimStacks = function(builder, animStacksOffset) {
  builder.addFieldOffset(4, animStacksOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.SceneFb.startAnimStacksVector = function(builder, numElems) {
  builder.startVector(8, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} animLayersOffset
 */
apemodefb.SceneFb.addAnimLayers = function(builder, animLayersOffset) {
  builder.addFieldOffset(5, animLayersOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.SceneFb.startAnimLayersVector = function(builder, numElems) {
  builder.startVector(12, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} animCurvesOffset
 */
apemodefb.SceneFb.addAnimCurves = function(builder, animCurvesOffset) {
  builder.addFieldOffset(6, animCurvesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
apemodefb.SceneFb.createAnimCurvesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.SceneFb.startAnimCurvesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} materialsOffset
 */
apemodefb.SceneFb.addMaterials = function(builder, materialsOffset) {
  builder.addFieldOffset(7, materialsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
apemodefb.SceneFb.createMaterialsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.SceneFb.startMaterialsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} texturesOffset
 */
apemodefb.SceneFb.addTextures = function(builder, texturesOffset) {
  builder.addFieldOffset(8, texturesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.SceneFb.startTexturesVector = function(builder, numElems) {
  builder.startVector(72, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} camerasOffset
 */
apemodefb.SceneFb.addCameras = function(builder, camerasOffset) {
  builder.addFieldOffset(9, camerasOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.SceneFb.startCamerasVector = function(builder, numElems) {
  builder.startVector(28, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} lightsOffset
 */
apemodefb.SceneFb.addLights = function(builder, lightsOffset) {
  builder.addFieldOffset(10, lightsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.SceneFb.startLightsVector = function(builder, numElems) {
  builder.startVector(64, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} skinsOffset
 */
apemodefb.SceneFb.addSkins = function(builder, skinsOffset) {
  builder.addFieldOffset(11, skinsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
apemodefb.SceneFb.createSkinsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.SceneFb.startSkinsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} filesOffset
 */
apemodefb.SceneFb.addFiles = function(builder, filesOffset) {
  builder.addFieldOffset(12, filesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
apemodefb.SceneFb.createFilesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.SceneFb.startFilesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} boolValuesOffset
 */
apemodefb.SceneFb.addBoolValues = function(builder, boolValuesOffset) {
  builder.addFieldOffset(13, boolValuesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<boolean>} data
 * @returns {flatbuffers.Offset}
 */
apemodefb.SceneFb.createBoolValuesVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(+data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.SceneFb.startBoolValuesVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} intValuesOffset
 */
apemodefb.SceneFb.addIntValues = function(builder, intValuesOffset) {
  builder.addFieldOffset(14, intValuesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
apemodefb.SceneFb.createIntValuesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.SceneFb.startIntValuesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} floatValuesOffset
 */
apemodefb.SceneFb.addFloatValues = function(builder, floatValuesOffset) {
  builder.addFieldOffset(15, floatValuesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
apemodefb.SceneFb.createFloatValuesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addFloat32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.SceneFb.startFloatValuesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} stringValuesOffset
 */
apemodefb.SceneFb.addStringValues = function(builder, stringValuesOffset) {
  builder.addFieldOffset(16, stringValuesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
apemodefb.SceneFb.createStringValuesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
apemodefb.SceneFb.startStringValuesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
apemodefb.SceneFb.endSceneFb = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
apemodefb.SceneFb.finishSceneFbBuffer = function(builder, offset) {
  builder.finish(offset, 'FBXP');
};

// Exports for Node.js and RequireJS
this.apemodefb = apemodefb;
